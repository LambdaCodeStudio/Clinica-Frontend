---
import { DashboardLayout } from '../../components/layout/DashboardLayout';
import { PageContainer } from '../../components/layout/PageContainer';
import { MediaGallery } from '../../components/media/MediaGallery';
import Button from '../../components/ui/Button';
import Tabs from '../../components/ui/Tabs';
import { Plus, Image, FileText, Camera } from 'lucide-react';

// Protección de ruta
if (!Astro.locals.isAuthenticated) {
  return Astro.redirect('/login?redirect=/archivos');
}

// Verificar permisos (solo ciertos roles pueden acceder)
const userRoles = Astro.locals.userRoles || [];
const allowedRoles = ['administrador', 'medico', 'secretaria'];
const hasAccess = userRoles.some(role => allowedRoles.includes(role));

if (!hasAccess) {
  return Astro.redirect('/dashboard?error=No tiene permisos para acceder a esta sección');
}

// Obtener parámetros opcionales de la URL
const activeTab = Astro.url.searchParams.get('tipo') || 'todos';
const patientId = Astro.url.searchParams.get('paciente') || '';
const treatmentId = Astro.url.searchParams.get('tratamiento') || '';

// Título basado en filtros
let pageTitle = "Gestión de Archivos";
let description = "Administrar imágenes y documentos";

if (patientId) {
  pageTitle = "Archivos del Paciente";
  description = "Administrar imágenes y documentos del paciente";
} else if (treatmentId) {
  pageTitle = "Archivos del Tratamiento";
  description = "Administrar imágenes y documentos del tratamiento";
}
---

<DashboardLayout pageTitle={pageTitle} client:load>
  <PageContainer
    title={pageTitle}
    description={description}
    actions={
      <Button 
        variant="primary" 
        icon={<Plus className="h-5 w-5" />} 
        onClick={() => document.getElementById('tab-todos')?.click()}
      >
        Subir Archivo
      </Button>
    }
    client:load
  >
    <Tabs 
      tabs={[
        {
          id: 'todos',
          label: 'Todos los archivos',
          content: (
            <MediaGallery 
              patientId={patientId}
              treatmentId={treatmentId}
              client:load 
            />
          )
        },
        {
          id: 'fotos_antes',
          label: 'Fotos Antes',
          icon: <Camera className="w-4 h-4" />,
          content: (
            <MediaGallery 
              patientId={patientId}
              treatmentId={treatmentId}
              typeFilter="foto_antes"
              client:load 
            />
          )
        },
        {
          id: 'fotos_despues',
          label: 'Fotos Después',
          icon: <Image className="w-4 h-4" />,
          content: (
            <MediaGallery 
              patientId={patientId}
              treatmentId={treatmentId}
              typeFilter="foto_despues"
              client:load 
            />
          )
        },
        {
          id: 'documentos',
          label: 'Documentos',
          icon: <FileText className="w-4 h-4" />,
          content: (
            <MediaGallery 
              patientId={patientId}
              treatmentId={treatmentId}
              typeFilter="documento"
              client:load 
            />
          )
        }
      ]}
      activeTab={activeTab}
      onChange={(tab) => {
        const url = new URL(window.location);
        url.searchParams.set('tipo', tab);
        window.history.pushState({}, '', url);
      }}
      client:load
    />
  </PageContainer>
</DashboardLayout>